
        ☆★☆　『MSXべーしっ君たーぼ』について　その1（基本編）　☆★☆


    　このマニュアルでは、「MSXべーしっ君たーぼ」の基本的な使い方について説
    明しています。各命令の使用方法については、「『MSXべーしっ君たーぼ』につ
    いて　その2（命令編）」をご参照下さい。使用にあたっての注意点や、高度な
    使い方については、「『MSXべーしっ君たーぼ』について　その3（応用編）」を
    ご参照下さい。
    　また、付属のサンプルプログラムの使い方については、「サンプルプログラム
    について」をご参照下さい。

    MSXは、アスキーの商標です。
    MSX-DOSは、Microsoft Corporationの登録商標です。


【1】 はじめに

　「MSXべーしっ君たーぼ」は、BASICプログラムを機械語にするためのソフトウェア
です。このようにプログラムを機械語に変換するソフトウェアを、「コンパイラ」と
いいます。
　「MSXべーしっ君たーぼ」の場合は、MSX-BASICと比べて、機種やプログラムによっ
て異なりますが、最大で15～20倍ほど高速になります。これなら、いつもお使いのBA
SICでゲームを作ることもできます。もちろん、実数やグラフィック関係の命令も使
うことができますので、複雑な計算を大量にしなければならないコンピュータグラフ
ィックも、短時間に高速処理することができます。

　ただし、「MSXべーしっ君たーぼ」には、高速処理が可能な代わりに、以下にあげ
るような、MSX-BASICとは使い方の異なる点や注意すべき点があります。

    ・倍精度変数を使うことができない。
    ・MSX-BASICよりも文字変数用のメモリの使用量が多い。
    ・カセットやディスクなどのファイル入出力用の命令を使うことができない。
    ・プログラム中で、漢字モードとANK(英数字)モードの切り替えができない。
    ・機械語に変換したプログラムを保存することができない。
    ・[CTRL]+[STOP]で処理を中断することができない。
    ・使い方の異なる命令がある。
    ・あまり大きなプログラムは、機械語に変更できない。

　このように注意すべき点はありますが、「MSXべーしっ君たーぼ」でできない部分
の処理をBASICに任せることもできます。
　このマニュアルをよくお読みのうえ、「MSXべーしっ君たーぼ」の機能を使いこな
して下さい。


【2】 「べーしっ君」「べーしっ君ぷらす」「べーしっ君たーぼ」の違い

　今まで、アスキーからは、「MSXべーしっ君」、「MSXべーしっ君ぷらす」という
BASICコンパイラを発売していました。これらのソフトウェアと「MSXべーしっ君たー
ぼ」の違いは、次の通りです。

    ○ MSXべーしっ君 → MSXべーしっ君ぷらす
        ・MSX2+の新しいスクリーンモード(SCREEN 10～12)をサポート。
        ・V9958で追加されたレジスタ用に、VDP関数をサポート。
        ・スクロール命令(SET SCROLL)をサポート。
        ・サンプルディスクを添付。

    ○ MSXべーしっ君ぷらす → MSXべーしっ君たーぼ
        ・新しいCPU R800の掛算命令をサポート。
        ・「MSXべーしっ君ぷらす」までのROMカートリッジに替わって、ディスクで
        　供給。

    《 備考 》
    　以前、「MSXマガジン 1992年5月号 プログラムサービス」(アスキー出版局)の
    中に、この「MSXべーしっ君たーぼ」を収録していました。このプログラムサー
    ビスの中に収録されていたBASICコンパイラ本体と、今回新しく発売された「MSX
    べーしっ君たーぼ」のBASICコンパイラ本体は同じものです。


【3】 「MSXべーしっ君たーぼ」の使い方

　まず「MSXべーしっ君たーぼ」のシステムディスクを、MSXのディスクドライブに差
し込んでから、MSXの電源を入れるか、リセットして下さい。MSX-BASICが起動すると
自動的に「MSXべーしっ君たーぼ」がディスクから読み込まれます。読み込みが終了
したら、「MSXべーしっ君たーぼ」の命令が使用可能となっています。

　「MSXべーしっ君たーぼ」の、高速化に関する命令は3つあります。順に説明します。

　1) CALL RUN

    　「CALL RUN」は、BASICで書かれたプログラムを全部機械語に直してから実行
    する命令です。BASICの「RUN」命令に相当します。以下の例題を入力してみて下
    さい。

        10 SCREEN 8
        20 LINE -(RND(1)*256,RND(1)*212),255
        30 IF INKEY$="" THEN 20
        40 END

    　このプログラムを「RUN」で実行したときと、「CALL RUN」で実行したときを
    比べてみて下さい。「CALL RUN」の方が早いことがお分かりいただけると思いま
    す。


　2) CALL TURBO ON

    　先ほども書きましたように、「MSXべーしっ君たーぼ」には、機械語に変換で
    きない命令があります。このようなとき、「CALL RUN」を使うことはできないの
    で、速くしたいところだけ「MSXべーしっ君たーぼ」で実行することができる
    「CALL TURBO ON」を使います。次のプログラムを入力してみて下さい。

        10 SCREEN 8
        20 COLOR 255
        30 OPEN "GRP:" FOR OUTPUT AS #1
        40 PRESET (0,0):PRINT #1,"ﾅﾆｶ ﾎﾞﾀﾝｦ ｵｼﾃｸﾀﾞｻｲ"
        60 IF INKEY$="" THEN 60
        70 LINE -(RND(1)*256,RND(1)*212),255
        80 IF INKEY$="" THEN 70
        90 END

    　これは、先ほどのプログラムにメッセージを付け加えたものです。では、これ
    を「CALL RUN」で動かしてみて下さい。「Syntax error in 30」というメッセー
    ジが出て止まります。でも、プログラムに間違いがあるわけではありません。こ
    れは「MSXべーしっ君たーぼ」では「OPEN」命令が使えませんということです。
    　そこで登場するのが、先ほどの「CALL TURBO ON」です。今のプログラムにこ
    の命令を追加してみます。

        50 CALL TURBO ON

    　実行するのは、普通の「RUN」です。今度はエラーが出ないで動作したことと
    思います。「MSXべーしっ君たーぼ」が「CALL TURBO ON」以降のプログラムだけ
    を機械語に直しているので、エラーが出ないわけです。


　3) CALL TURBO OFF

    　「CALL TURBO ON」があれば何でもできるかというと、そういうわけではあり
    ません。先ほどの例題は、たまたま「MSXべーしっ君たーぼ」で使えない命令が
    最初にありましたが、実際にプログラムを作ってみると、使えない命令を途中で
    使いたくなることがしばしばあります。そういう時には「CALL TURBO OFF」を使
    って下さい。
    　これも、例題を使って説明します。先ほどのプログラムに追加して使って下さ
    い。

        90 CLS
        110 PRESET (0,0):PRINT #1,"ﾓｳ ｲﾁﾄﾞ ﾔﾘﾏｽｶ? (Y/N)"
        130 I$=INKEY$
        140 IF I$="Y" THEN 170
        150 IF I$="N" THEN END
        160 GOTO 130
        170 LINE -(RND(1)*256,RND(1)*212),255
        180 IF INKEY$="" THEN 170

    　これを「RUN」で動かしてみると、「Syntax error in 110」というエラーが出
    るはずです。今度は「PRINT #」命令が使えませんということです。使えない命
    令を使うときは「CALL TURBO OFF」を使えばいいので、次の2つを追加してみます。

        100 CALL TURBO OFF
        120 CALL TURBO ON

    　120行で、もう一度「CALL TURBO ON」を実行するのは、使えない命令以外を速
    く動かすためです。使えない命令が出てきた場合は、このように「OFF」と「ON」
    で挟みこむと、その部分だけ速度がBASICと同じになりますが、処理できなくな
    るということはありません。


    《 備考 》 ハードディスクへのインストール

    　ご購入時の「MSXべーしっ君たーぼ」は、フロッピーディスクから起動するよ
    うになっていますが、ハードディスクに組み込むことも可能です。この場合は、
    ハードディスクの「MSXべーしっ君たーぼ」を組み込みたいディレクトリに、
    「MSXべーしっ君たーぼ」のディスクから以下のファイルをコピーして下さい。
            XBASICTR.BIN
    　このように組み込んだ場合、「MSXべーしっ君たーぼ」を使うプログラムを読
    み込む前に、MSX-BASICから以下の命令を実行して下さい。
            BLOAD "XBASICTR.BIN",R
    　サブディレクトリに組み込んだ場合は、ファイル名の前にディレクトリパスを
    忘れないようにして下さい。


【4】 注意点

　「MSXべーしっ君たーぼ」を使うにあたっては、これから述べることに注意して下
さい。

　1) ON/OFFはマルチステートメントでは使用できない
    　「CALL TURBO ON/OFF」は、マルチステートメントでは使うことができません。
    「CALL TURBO ON/OFF」と同じ行に他の命令を書かないようにして下さい。

　2) 同じ名前でも違う変数
    　「CALL TURBO ON」で動いているときと、「CALL TURBO OFF」で動いていると
    きは、変数や配列の名前が同じでも、MSXの内部では違う変数になります。これ
    は、BASICの変数エリア（MSXが変数を保存しているメモリ領域）と、「MSXべー
    しっ君たーぼ」の変数エリアが違うためです。
    　しかし、整数型の変数（名前に%がついている変数）や、整数型の配列はデー
    タの受け渡しをすることができます。
    　整数型変数A%と整数型配列変数E%のデータを受け取りたいときは

        CALL TURBO ON(A%, E%())

    として下さい。最初にDEFINT命令で整数型変数の宣言をしている場合は、次のよ
    うに%を省略することができます。

        CALL TURBO ON(A, E())

　3) 実数型変数の有効範囲
    　「MSXべーしっ君たーぼ」では、実数型の変数がMSX-BASICと多少異なっていま
    す。型は「!」で表わす単精度型のみで、倍精度型実数はありません。この単精
    度実数の精度は約4.5桁で、範囲は正負の2.939E-39～1.701E+38までです。10000
    以上の浮動小数は「E形式」で表示されます。実数型の関数、演算はすべてこの
    型に準じているので、MSX-BASICとは若干違った演算結果になります。

　4) 小さい配列変数
    　MSX-BASICでは添字（カッコの中の数字）が10以下の配列変数は宣言しなくて
    も使うことができますが、「MSXべーしっ君たーぼ」では宣言する必要がありま
    す。また、配列変数を使うときは、最初の「CALL TURBO ON」の直後に宣言して
    下さい。

　5) 無限ループの中断
    　無限ループとは、終わりのない処理のことです。例えば、

        10 GOTO 10

    という処理は終わりがありません。こういう場合、BASICならば[CTRL]+[STOP]を
    押すことで処理を中断することができますが、「MSXべーしっ君たーぼ」では中
    断することができません。これは機械語に変換されたプログラムを実行している
    ためです。
    　中断できるようにしたい場合は、次のようにして下さい。

        10 CALL TURBO ON
        20 ON KEY GOSUB 100
        30 KEY(1) ON
        40 GOTO 40
        100 END

    　これは、ファンクションキー割り込みという機能を使ったものです。全部の
    「CALL TURBO ON」の後に同じ処理を入れるようにすれば、いつでも処理を中断
    できるようになります。「MSXべーしっ君たーぼ」を使い慣れていない方は、な
    るべくこのような処理を入れるように心掛けて下さい。
    　また、「MSXべーしっ君たーぼ」でプログラムを実行することは、機械語のプ
    ログムを実行することと同じですので、実行前にプログラムをSAVEすることも
    大切です。面倒でも忘れないように心掛けて下さい。

    　《 備考 》
        　MSX-BASICではプログラムミスがあっても暴走することはほとんどありま
        せんが、「MSXべーしっ君たーぼ」はコンパイラですから、プログラムミス
        による暴走は避けられません。
        　ですから、実行する前には、必ずフロッピーディスクにプログラムをSAVE
        するようにして下さい。SAVEの方法は、お手持ちのMSXのBASICマニュアルを
        ご覧下さい。

　6) FOR～NEXTの対応
    　MSX-BASICでは、NEXT文のパラメータ（FOR～NEXTで使う変数）の指定はしなく
    ても良いことになっていますが、「MSXべーしっ君たーぼ」では必ず指定するよ
    うにして下さい。指定しないと機械語に変換することができません。例えば、

        10 FOR I=0 TO 10
        20 NEXT

    ではなく、

        10 FOR I=0 TO 10
        20 NEXT I

    とプログラムするようにして下さい。


                    (C) Copyright 1994 ASCII Corporation. All rights reserved.

